<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.digitalchina.sport.order.api.dao.CurriculumMapper">
    <resultMap id="CurriculumClass" type="com.digitalchina.sport.order.api.model.CurriculumClass">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="curriculum_id" property="curriculum_id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="class_long" property="class_long" jdbcType="VARCHAR"/>
        <result column="class_times" property="class_times" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="student_num" property="student_num" jdbcType="INTEGER"/>
        <result column="lean_time" property="lean_time" jdbcType="VARCHAR"/>
        <result column="bm_time" property="bm_time" jdbcType="VARCHAR"/>
        <result column="bm_end" property="bm_end" jdbcType="VARCHAR"/>
        <result column="target" property="target" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="fee_code" property="fee_code" jdbcType="VARCHAR"/>
        <result column="fee" property="fee" jdbcType="DECIMAL"/>
        <result column="discount_fee" property="discount_fee" jdbcType="DECIMAL"/>
        <result column="fee_mark" property="fee_mark" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
        -->
        id, training_institutions_id, cooperative_merchant_id, img_url, name, teachers, train_type,
        content, address, enrollment_required, phone, enrollment_read, create_date, recommend_time,
        recommend_level
    </sql>
    <select id="getCurriculumClassByCurriculumId" resultMap="CurriculumClass" parameterType="java.util.Map">
        SELECT
        cc.*,
        sum(cct.max_people-cct.reserve_people) as max_people,
        sum(cct.sign_up) as sign_up
        FROM
        curriculum_class cc,curriculum_class_times cct
        WHERE cct.class_id = cc.id
        <if test="curriculumClassId != null and curriculumClassId != ''">
            AND cct.class_id = #{curriculumClassId}
        </if>
        GROUP BY cc.id
    </select>
    <select id="checkXuban" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(1) FROM curriculum_order co
        WHERE 1=1
        <if test="xuban_curriculums!= null">
        AND co.curriculum_id IN
        <foreach collection="xuban_curriculums" item="item"
                 index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
        and co.student_name = #{student_name}
        and co.phone = #{phone}
    </if>
    </select>
    <insert id="insertOrder" parameterType="java.util.Map">
        INSERT INTO curriculum_order(id,order_number,come,user_id,
        student_name,phone,gender,birthday,id_card,other_student_msg,school,
        curriculum_id,curriculum_class_id,curriculum_class_time_id,fee,fee_msg,invalid_time,
        xuban_flag,xuban_fee)
        VALUES (#{id},#{order_number},#{come},#{userId},
        #{studentName},#{phone},#{gender},#{birthday},#{idCard},#{otherStudentMsg},#{school},
        #{curriculumId},#{curriculumClassId},#{classTimeId},#{fee},#{feeMsg},date_add(SYSDATE(), interval #{invalid_time} minute),
        #{xuban_flag},#{xuban_fee})
    </insert>
    <update id="updataCurriculumOrder" parameterType="java.util.Map">
        UPDATE curriculum_order co
        SET
        co.status=#{status},
        co.pay_type=#{pay_type},
        co.pay_acount=#{pay_acount},
        co.pay_fee=#{pay_fee},
        co.pay_time=#{pay_time}
        WHERE co.order_number=#{order_number}
    </update>

    <select id="getCurriculumOrder" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT * FROM
        (
            SELECT
            co.id,
            co.order_number,
            co.come,
            co.user_id,
            co.student_name,
            co.phone,
            co.gender,
            co.birthday,
            co.id_card,
            co.other_student_msg,
            co.school,
            co.curriculum_id,
            co.curriculum_class_id,
            co.curriculum_class_time_id,
            co.create_time,
            co.fee,
            co.fee_msg,
            co.pay_fee,
            co.pay_type,
            co.pay_time,
            IF(co.Invalid_time &lt; SYSDATE() AND co.`status` = 0, 4, co.`status` ) AS `status`,
            co.re_status,
            c.`name`,
            cc.`name` as class_name,
            cct.time,
            cc.content,
            cc.student_num,
            cc.class_times,
            cc.class_long,
            cc.target,
            cc.fee_mark,
            co.xuban_flag,
            co.xuban_fee,
            cc.discount_fee
            FROM
            curriculum_order co,
            curriculum c,
            curriculum_class cc,
            curriculum_class_times cct
            WHERE
            co.curriculum_id = c.id
            AND co.curriculum_class_id = cc.id
            AND co.curriculum_class_time_id = cct.id
            AND co.user_id=#{userId}
        ) t WHERE 1=1
        <if test="status != null and status != ''">
           AND t.status=#{status}
        </if>
        ORDER BY
        t.create_time DESC
        LIMIT #{startIndex},#{pageSize}
    </select>
    <select id="getCurriculumOrderbyOrderNumber" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        co.id,
        co.order_number,
        co.user_id AS userId,
        IF (co.Invalid_time &lt; SYSDATE() AND co.`status` = 0, 4, co.`status` ) AS `status`,
        IF (co.xuban_flag = '1', co.fee, co.xuban_fee) fee,
        c.`name`,
        mp.pay_key AS payKey,
        mp.partner_id AS partnerId,
        mp.seller_id AS sellerId,
        mp.sign_type AS signType,
        cc.`name` AS className
        FROM
        curriculum_order co,
        curriculum c,
        curriculum_class cc,
        curriculum_class_times cct,
        merchant_pay_account mp
        WHERE
        co.curriculum_id = c.id
        AND co.curriculum_class_id = cc.id
        AND mp.merchant_id = c.training_institutions_id
        AND co.curriculum_class_time_id = cct.id
        <if test="payWay != null and payWay != ''">
            AND mp.pay_way = #{payWay}
        </if>
        <if test="orderNumber != null and orderNumber != ''">
            AND co.order_number = #{orderNumber}
        </if>
        <if test="userId != null and userId != ''">
            AND co.user_id = #{userId}
        </if>
    </select>
    <update id="updataClassTime" parameterType="java.util.Map">
         UPDATE curriculum_class_times cct
                SET
                cct.sign_up=cct.sign_up+1
        WHERE cct.id=#{classTimeId}
    </update>
    <!-- 是否存在 -->
    <select id="isHaveByParams" parameterType="java.util.Map" resultType="int">
        SELECT
        COUNT(0)
        FROM
        curriculum_order co
        WHERE 1=1
        <if test="orderId != null and orderId != ''">
            AND co.id = #{orderId}
        </if>
        <if test="orderNumber != null and orderNumber != ''">
            AND co.order_number=#{orderNumber}
        </if>
    </select>
    <select id="getCurriculumOrderDetailByOrderId" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
            co.student_name AS studentName,
            co.phone AS phone,
            co.id_card AS idCard,
            co.curriculum_id AS curriculumId,
            co.other_student_msg AS otherStudentMsg,
            co.`status` AS `status`,
            co.invalid_time AS invalidTime,
            co.create_time AS createTime,
            c.`name` AS curriculumName,
            cc.`name` AS className,
            cc.lean_time AS leanTime,
            cct.time AS time,
            cc.content AS classContent,
            cc.student_num AS studentNum,
            cc.class_long AS classLong,
            cc.class_times AS classTimes,
            cc.target AS target,
            co.fee AS fee,
            cc.fee_mark AS feeMark,
            co.xuban_flag,
            co.xuban_fee,
            cc.discount_fee
        FROM
            curriculum_order co
        LEFT JOIN curriculum c ON c.id = co.curriculum_id
        LEFT JOIN curriculum_class cc ON cc.id = co.curriculum_class_id
        LEFT JOIN curriculum_class_times cct ON cct.id = co.curriculum_class_time_id
        WHERE co.user_id = #{userId}
        AND co.id = #{orderId}
    </select>
    <!-- 取消订单 -->
    <update id="cancelOrderByOrderId" parameterType="java.util.Map" >
        UPDATE curriculum_order
        SET  `status` = #{status},
              remarks=#{remarks},
              update_time=NOW()
        WHERE id = #{orderId}
        AND user_id = #{userId}
    </update>
    <!--更新订单状态，时间超过10分钟状态变为失效订单 -->
    <update id="updateOrderByOrderTime" parameterType="java.util.Map" >
        UPDATE curriculum_order
        SET `status`=#{status},remarks=#{remarks},update_time=NOW()
        WHERE
        <![CDATA[
			invalid_time < NOW() AND `status`='0'
  		]]>
    </update>
</mapper>