<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.digitalchina.sport.order.api.dao.MyOrderDao" >
	<!-- 根据用户id，按照状态查询所有订单 -->
	<select id="getAllOrderByUserId" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT
			id,
			ticket_name,
			person_kind,
			CAST(status AS CHAR) AS status,
			sell_price,
			order_time,
			stadium_name,
			order_number,
			CAST(refund_status AS CHAR) AS refundStatus
		FROM
			order_base_info
		WHERE 1=1
		<if test="userId != null and userId != ''">
			AND user_id = #{userId}
		</if>
		<if test="status != null and status != '' and status != 5">
			AND `status` = #{status}
		</if>
		<if test="status == 5">
			AND `status` = #{status}
			<![CDATA[
			AND order_time > DATE_SUB(NOW(),INTERVAL 1 DAY)
  			]]>
		</if>
		<if test="refundStatus != null and refundStatus != ''">
			AND `refund_status` = #{refundStatus}
		</if>
		<if test="orderNumber != null and orderNumber != ''">
			AND order_number = #{orderNumber}
		</if>
		ORDER BY
			order_time DESC
		LIMIT
			#{start},#{pageSize}
	</select>
	<!-- 根据用户id，按照状态查询所有订单个数 -->
	<select id="getCountByUserId" parameterType="java.util.Map" resultType="int">
		SELECT
			COUNT(0)
		FROM
			order_base_info
		WHERE 1=1
		<if test="userId != null and userId != ''">
			AND user_id = #{userId}
		</if>
		<if test="status != null and status != '' and status != 5">
			AND `status` = #{status}
		</if>
		<if test="status == 5">
			AND `status` = #{status}
			<![CDATA[
			AND order_time > DATE_SUB(NOW(),INTERVAL 1 DAY)
  			]]>
		</if>
		<if test="refundStatus != null and refundStatus != ''">
			AND `refund_status` = #{refundStatus}
		</if>
		<if test="orderNumber != null and orderNumber != ''">
			AND order_number = #{orderNumber}
		</if>
	</select>
	<!-- 订单详情 -->
	<select id="getOrderDetails" parameterType="String" resultType="java.util.HashMap">
		SELECT
			ob.id,
			ob.stadium_name,
			ob.sub_stadium_name,
			ob.ticket_id,
			ob.ticket_name,
			ob.sell_price,
			ob.order_time,
			ob.status,
			ob.son_orders sonOrders
		FROM
			order_base_info ob
		WHERE
			ob.id = #{orderId}
	</select>
	<!-- 一个订单下的所有子订单详情 -->
	<select id="getTotalOrderByUserIdAndOrderId" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT
			oc.id,
			oc.remain_number,
			oc.order_code,
			CAST(oc.status AS CHAR) AS status,
			oc.date_limit,
			oc.time_limit,
			oc.approach_time,
			oc.departure_time,
			f.field_name,
			oc.can_retreat
		FROM
			order_content_detail oc
		LEFT JOIN order_base_info ob ON ob.id = oc.order_base_id
		LEFT JOIN field f ON oc.field_id = f.id
		WHERE
			ob.id= #{orderId}
		<if test="userId != null and userId != ''">
			AND ob.user_id = #{userId}
		</if>
	</select>
	<!-- 一个订单下的所有子订单个数 -->
	<select id="getCountByOrderId" parameterType="String" resultType="int">
		SELECT
			COUNT(0)
		FROM
			order_content_detail oc
		WHERE
			oc.order_base_id = #{orderId}
	</select>
	<!-- 一个订单下的所有子订单的编号 -->
	<select id="getAllOrderContentIdByOrderId" parameterType="String" resultType="java.util.HashMap">
		SELECT
			oc.id
		FROM
			order_content_detail oc
		WHERE
			oc.order_base_id = #{orderId}
	</select>
	<!-- 新增订单基本信息 -->
	<insert id="inserOrderBaseInfo" parameterType="java.util.Map">
		INSERT INTO `szsport_order_mgr`.`order_base_info`
					(`id`, `order_number`, `stadium_name`, `classify`, `sub_stadium_id`,`sub_stadium_name`, `person_kind`,
					`ticket_id`, `ticket_name`, `ticket_type`, `order_time`, `order_channel`,`status`, `cost_price`, `sell_price`,
					`user_id`, `user_name`, `user_tel`, `pay_type`, `pay_acount`, `pay_time`, `pay_price`, `merchant_id`, `son_orders`,`remarks`)
		VALUES (#{id}, #{orderNumber}, #{stadiumName}, #{classify}, #{subStadiumId},#{subStadiumName}, #{personKind},
				#{ticketId}, #{ticketName}, #{ticketType}, NOW(), #{orderChannel},#{status}, #{costPrice}, #{sellPrice},
				#{userId}, #{userName}, #{userTel}, #{payType}, #{payAcount}, #{payTime}, #{payPrice}, #{merchantId}, #{sonOrders},#{remarks});
	</insert>

	<!-- 判断订单流水号是否重复 -->
	<select id="isHaveByOrderNumer" parameterType="String" resultType="int">
		SELECT
			COUNT(0)
		FROM
			order_base_info ob
		WHERE
			ob.order_number=#{orderNumber}
	</select>
	<!-- 新增子订单详情信息 -->
	<insert id="inserOrderContentDetail" parameterType="java.util.Map">
	INSERT INTO `szsport_order_mgr`.`order_content_detail` (
		       	`id`,`order_code`,`order_base_id`,
				`start_time`,`end_time`,`can_retreat`,
				`remain_number`,`total_number`,
				`everyday_number`,`everyday_remain_number`,`date_limit`,`time_limit`,`time_interval_id`,
				`forbidden_date`,`hours_limit`,
				`take_status`,`check_status`,
				 status,`approach_time`,`departure_time`,
				`take_type`,`take_time`,
				`check_type`,`check_time`,
				`cost_price`,`sell_price`,
				`field_id`,`remarks`)
	VALUES(#{id},#{orderCode},#{orderBaseId},
		   #{startTime},#{endTime},#{canRetreat},
		   #{remainNumber},#{totalNumber},
		   #{everydayNumber},#{everydayRemainNumber},#{dateLimit},#{timeLimit},#{timeIntervalId},
		   #{forbiddenDate},#{hoursLimit},
		   #{takeStatus},#{checkStatus},#{status},#{approachTime},#{departureTime},
		   #{takeType},#{takeTime},
		   #{checkType},#{checkTime},
		   #{costPrice},#{sellPrice},
		   #{fieldId},#{remarks})
	</insert>

	<!-- 判断12位确认码是否重复 -->
	<select id="isHaveByOrderCode" parameterType="String" resultType="int">
		SELECT
			COUNT(0)
		FROM
			order_content_detail oc
		WHERE
			oc.order_code=#{orderCode}
	</select>

	<!-- 订单流水号查询订单 -->
	<select id="getOrderByOrderNumer" parameterType="String" resultType="OrderBaseInfo">
		SELECT
		*
		FROM
		order_base_info ob
		WHERE
		ob.order_number=#{orderNumber}
	</select>

	<!-- 根据子场馆id查询分类id -->
	<select id="getClassifyBySubStadiumId" parameterType="String" resultType="String">
		SELECT
			classify
		FROM
			sub_stadium s
		WHERE
			s.id =#{subStadiumId}
	</select>

	<!-- 根据确认码查询订单详情 -->
	<select id="getOrderDetailByOrderCode" parameterType="String" resultType="java.util.HashMap">
		SELECT
			ob.id AS order_base_id,
			ob.sub_stadium_id AS subStadiumId,
			ob.stadium_name,
			ob.sub_stadium_name,
			ob.classify,
			ob.ticket_id,
			ob.ticket_name,
			ob.ticket_type,
			ob.user_id,
			ob.user_name,
			ob.user_tel,
			ob.pay_acount,
			ob.pay_time,
			ob.pay_type,
			ob.pay_price,
			oc.id as orderContentId,
			oc.start_time,
			oc.end_time,
			oc.remain_number,
			oc.total_number,
			oc.everyday_number,
			oc.everyday_remain_number,
			oc.date_limit,
			oc.time_limit,
			oc.forbidden_date,
			oc.hours_limit,
			CAST(oc.status AS CHAR) AS status,
			oc.take_status,
			oc.take_time,
			oc.check_status,
			oc.check_time,
			oc.sell_price,
			oc.cost_price,
			oc.approach_time,
			oc.departure_time,
			oc.time_interval_id,
			oc.field_id,
			f.field_name
		FROM
			order_content_detail oc
		LEFT JOIN order_base_info ob ON oc.order_base_id = ob.id
		LEFT JOIN field f ON f.id=oc.field_id
		WHERE
			oc.order_code = #{orderCode}
	</select>

    <!-- 取票=====>>更新字单 -->
    <update id="updateTake" parameterType="java.util.Map" >
         UPDATE order_content_detail oc
          SET oc.take_status = #{takeStatus},
              oc.take_time = NOW(),
              oc.take_type = #{takeType},
              oc.remarks=#{remarks},
              oc.status=#{status}
          WHERE
			oc.order_code = #{orderCode}
    </update>

    <!-- 验票=====>>更新字单 -->
    <update id="updateCheck" parameterType="java.util.Map" >
        UPDATE order_content_detail oc
        SET oc.remain_number = #{remainNumber},
        	oc.everyday_remain_number = #{everydayRemainNumber},
            oc.check_status = #{checkStatus},
            oc.check_time = NOW(),
            oc.check_type=#{checkType},
            oc.remarks=#{remarks},
            oc.status=#{status}
        WHERE
          oc.order_code = #{orderCode}
    </update>

    <!-- 支付相关等=====>>更新字单 -->
	<!-- 修改，根据id更新-->
    <update id="updateOrderContent" parameterType="java.util.Map" >
        UPDATE order_content_detail oc
        SET oc.`status` = #{status},
            oc.remarks=#{remarks}
        WHERE
            oc.id = #{orderContentId}
    </update>

	<!-- 支付相关等=====>>更新主订单 -->
	<update id="updateOrderBase" parameterType="java.util.Map" >
		UPDATE order_base_info ob
		SET  ob.`status` = #{status},
			 ob.pay_acount = #{payAcount},
			 ob.pay_price = #{payPrice},
			 ob.pay_time = #{payTime},
			 ob.pay_type = #{payType}
		WHERE
			ob.order_number = #{orderNumber}
	</update>

	<!-- 订单流水号查询商户和订单内容 -->
	<select id="getOrderAndMpByOrderNumer" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT
			ob.id AS orderBaseId,
			ob.order_number AS orderNumber,
			ob.stadium_name AS stadiumName,
			ob.sub_stadium_name AS subStadiumName,
			ob.classify,
			ob.person_kind AS personKind,
			ob.ticket_id AS ticketId,
			ob.ticket_name AS ticketName,
			ob.ticket_type AS ticketType,
			ob.order_time AS orderTime,
			ob.order_channel AS orderChannel,
			CAST(ob.status AS CHAR) AS status,
			ob.cost_price AS costPrice,
			ob.sell_price AS sellPrice,
			ob.user_id AS userId,
			ob.user_name AS userName,
			ob.user_tel AS userTel,
			ob.son_orders AS sonOrders,
			mp.merchant_id AS merchantId,
			mp.pay_way AS payWay,
			mp.app_id AS appId,
			mp.seller_id AS sellerId,
			mp.pay_key AS payKey,
			mp.partner_id AS partnerId,
			mp.sign_type AS signType
		FROM
			order_base_info ob
		LEFT JOIN merchant_pay_account mp ON mp.merchant_id = ob.merchant_id
		WHERE
			ob.order_number=#{orderNumber}
		<if test="payWay != null and payWay != ''">
			AND mp.pay_way=#{payWay}
		</if>
	</select>

	<!-- 取消订单的字单，根据主订单的编号-->
	<update id="cancelOrderContent" parameterType="java.util.Map" >
		UPDATE order_content_detail oc
		SET oc.`status` = #{status},
		oc.remarks=#{remarks}
		WHERE
		oc.id = #{id}
	</update>

	<!-- 取消订单的主订单,根据订单的编号 -->
	<update id="cancelOrderBase" parameterType="java.util.Map" >
		UPDATE order_base_info ob
		SET  ob.`status` = #{status},
			ob.remarks=#{remarks}
		WHERE
		ob.id = #{orderId}
	</update>

	<!-- 判断订单号是否重复 -->
	<select id="isHaveByOrderId" parameterType="String" resultType="int">
		SELECT
		COUNT(0)
		FROM
		order_base_info ob
		WHERE
		ob.id=#{orderId}
	</select>

	<!-- 新增子订单验票记录，只有年卡散票有 -->
	<insert id="inserUsedRecords" parameterType="java.util.Map">
		INSERT INTO `szsport_order_mgr`.`used_records` (
			`id`,
			`used_time`,
			`used_number`,
			`remain_number`,
			`everyday_remain_number`,
			`remarks`,
			`order_code`,
			`order_content_id`
		)
		VALUES
			(
				#{id},
				NOW(),
				#{usedNumber},
				#{remainNumber},
				#{everydayRemainNumber},
				#{remarks},
				#{orderCode},
				#{orderContentId}
			);
	</insert>


	<!--定时任务中使用，更新订单状态，时间超过10分钟状态变为失效订单 -->
	<update id="updateAllOrder" parameterType="java.util.Map" >
		UPDATE order_base_info ob
		SET ob.status='5',ob.remarks=#{remarks}
		WHERE
		<![CDATA[
			ob.order_time < DATE_SUB(NOW(),INTERVAL 10 MINUTE) AND ob.status='0'
  		]]>
	</update>

	<update id="updateAllOrderContent" parameterType="java.util.Map" >
		UPDATE order_content_detail oc
		SET oc. STATUS = '5',
		oc.remarks = #{remarks}
		WHERE
		oc.order_base_id IN (
		SELECT
		ob.id
		FROM
		order_base_info ob
		WHERE
		ob. STATUS = '5'
		)
	</update>
	<!--定时任务中使用,每天24点更新次数票的剩余次数 -->
	<update id="updateAllEveryRemain" parameterType="java.util.Map">
		UPDATE order_content_detail oc
		SET oc.everyday_remain_number=oc.everyday_number
		WHERE oc.status=#{status}
	</update>

	<!--定时任务中使用,针对年票，当剩余次数都没有的时候，表示子单已全部使用完成，那么子单所在的主单的状态就应该为已使用 -->
	<update id="updateOrderBaseStatus" parameterType="java.util.Map">
		UPDATE order_base_info ob
		SET ob.`status` = '2',
		 ob.remarks = #{remarks}
		WHERE
			ob.id IN (
				SELECT
					oc.order_base_id
				FROM
					order_content_detail oc
				WHERE
					oc.remain_number = 0
			)
		AND ob.`status` = '1'
		AND ob.ticket_type = '0'
	</update>
	<!--定时任务中使用,针对年票，只要子单的状态是未使用，主单的状态就还是待使用，如果未使用的子单没有了，就变成已使用 -->
	<update id="updateUnOrderBaseStatus" parameterType="java.util.Map">
		UPDATE order_base_info ob
		SET ob.`status` = '1',
		 ob.remarks = #{remarks}
		WHERE
			ob.id IN (
				SELECT
					oc.order_base_id
				FROM
					order_content_detail oc
				WHERE
				<![CDATA[
					oc.remain_number > 0
				]]>
				AND oc.status IN(1,2)
			)
		AND ob.`status` = '2'
		AND ob.ticket_type = '0'
	</update>
	<!-- 根据商户id查询商户编号 -->
	<select id="getMerchantNumber" parameterType="String" resultType="String">
		SELECT
		merchant_number
		FROM
		merchant m
		WHERE
		m.id =#{merchantId}
	</select>
	<!-- 场地验票=====>>更新字单 -->
	<update id="updateFieldContent" parameterType="java.util.Map" >
		UPDATE order_content_detail oc
		SET
			oc.check_status = #{checkStatus},
			oc.check_time = NOW(),
			oc.check_type=#{checkType},
			oc.remarks=#{remarks},
			oc.status=#{status}
		WHERE
		oc.order_code = #{orderCode}
	</update>
	<!-- 一个已付款的订单下的所有 某个状态  的子订单个数 -->
	<select id="getOrderCountByMap" parameterType="String" resultType="int">
		SELECT
			COUNT(0)
		FROM
			order_content_detail oc
		WHERE
			oc.order_base_id = #{orderBaseId}
		AND oc.`status` = #{status}
	</select>
	<!-- 锁定该场地、该日期、该时间段的场地状态为1：已锁定 -->
	<insert id="insertLockField" parameterType="java.util.Map">
	INSERT INTO `szsport_order_mgr`.`site_time_interval_status` (
		`id`,
		`field_id`,
		`order_date`,
		`time_interval_id`,
		`status`,
		`create_time`,
		`update_time`
	)
	VALUES
		(
			#{id},
			#{fieldId},
			#{orderDate},
			#{timeIntervalId},
			#{status},
			NOW(),
			NOW()
		);
	</insert>

	<select id="getSiteTimeIntervalStatusCount" parameterType="String" resultType="int">
		SELECT
			COUNT(0)
		FROM
			site_time_interval_status s
		WHERE
			s.field_id = #{fieldId}
		<![CDATA[AND s.order_date >= #{startDate} AND s.order_date <= #{endDate}]]>
		AND s.time_interval_id = #{timeIntervalId}
	</select>
	<select id="getSpecialStatusCount" parameterType="String" resultType="int">
		SELECT
		COUNT(0)
		FROM
		site_time_interval_status s
		WHERE
		s.field_id = #{fieldId}
		<![CDATA[AND s.order_date >= #{startDate} AND s.order_date <= #{endDate}]]>
		AND s.time_interval_id = #{timeIntervalId}
		AND (s.`status` ='2' OR s.`status` ='3')
	</select>
	<select id="getSiteTimeIntervalStatus" parameterType="String" resultType="java.util.Map">
		SELECT
			s.`status` AS  status
		FROM
			site_time_interval_status s
		WHERE
			s.field_id = #{fieldId}
		<![CDATA[AND s.order_date >= #{startDate} AND s.order_date <= #{endDate}]]>
		AND s.time_interval_id = #{timeIntervalId}
	</select>
	<!-- 验过票的未使用订单修改状态 -->
	<update id="updateOrderContentStatus" parameterType="java.util.Map" >
		UPDATE order_content_detail oc
		SET oc.`status` = '2',
			oc.remarks=#{remarks}
		WHERE
			oc.check_status = '1'
		AND oc.`status` = '1'
	</update>
	<!-- 场地票=====>>更新场地锁定状态 -->
	<update id="updateLockField" parameterType="java.util.Map" >
		UPDATE site_time_interval_status s
		SET
			s.status=#{status},
			s.update_time=NOW()
		WHERE
			s.field_id = #{fieldId}
			<![CDATA[AND s.order_date >= #{startDate} AND s.order_date <= #{endDate}]]>
			AND s.time_interval_id=#{timeIntervalId}
	</update>
	<select id="getStatusListByParams" parameterType="java.util.Map" resultType="java.util.Map">
		<![CDATA[ SELECT
        id,
        `status` AS `status`
        FROM
        site_time_interval_status s
        WHERE
        s.field_id = #{fieldId}
        AND s.order_date >= #{startDate}
        AND s.order_date <= #{endDate}
        AND s.time_interval_id = #{timeIntervalId}
        ]]>
	</select>
	<!-- 一个订单下的所有子订单详情 -->
	<select id="getOrderContentListByOrderId" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT
			ob.id AS orderBaseId,
			ob.sub_stadium_id AS subStadiumId,
			ob.order_number AS orderNumber,
			ob.ticket_id AS ticketId,
			oc.id as orderContentId,
			oc.date_limit AS dateLimit,
			oc.time_interval_id AS timeIntervalId,
			oc.time_limit AS timeLimit,
			CAST(oc.status AS CHAR) AS status,
			oc.field_id AS fieldId
		FROM
			order_content_detail oc
			LEFT JOIN order_base_info ob ON ob.id = oc.order_base_id
		WHERE
			ob.id= #{orderId}
	</select>
	<!-- 失效订单，释放场地状态 -->
	<select id="getOrderNumberByStatus" parameterType="String" resultType="java.util.HashMap">
		SELECT
			ob.order_number AS orderNumber
		FROM
			order_base_info ob
		WHERE
			ob.`status` = #{status}
			AND ob.ticket_type='1'
	</select>

	<!--定时任务中使用,当订单超过了验票时间，状态变为已过期=8 -->
	<select id="getTimeOverSiteOrder" resultType="java.util.HashMap">
		<![CDATA[SELECT
		oc.id
		FROM
		order_content_detail oc
		WHERE
		oc.end_time IS NULL
		AND DATE(oc.date_limit) < NOW()
		AND oc.`status` = '1'
		AND (
		oc.check_status IS NULL
		OR oc.check_status = '0'
		)]]>
	</select>
	<select id="getTimeOverYearOrder" resultType="java.util.HashMap">
		<![CDATA[SELECT
			oc.id
		FROM
			order_content_detail oc
		WHERE
			oc.end_time IS NOT NULL
		AND oc.end_time < NOW()
		AND oc.`status` = '1'
		AND (
			oc.check_status IS NULL
			OR oc.check_status = '0'
		)]]>
	</select>
	<update id="updateTimeOver" parameterType="java.util.Map">
		UPDATE order_content_detail SET `status` = '8',remarks = #{remarks}
		WHERE id = #{id}
	</update>

	<delete id="deleteOrderBase" parameterType="String">
		delete from order_base_info where id = #{id}
	</delete>

	<!--  -->
	<select id="getOrderBaseByOrderContentId" parameterType="String" resultType="String">
		SELECT
			oc.order_base_id
		FROM
			order_content_detail oc
		WHERE
			oc.id=#{id}
	</select>
	<!--定时任务中使用，更新订单状态，时间超过10分钟状态变为失效订单 -->
	<select id="getSxOrderNotChange" resultType="java.util.HashMap">
		SELECT
			ob.order_number AS orderNumber
		FROM
			order_base_info ob
		WHERE
		<![CDATA[
			ob.order_time < DATE_SUB(NOW(),INTERVAL 10 MINUTE) AND ob.status='0'
  		]]>
	</select>
	<select id="getOrderNumberByOrderId" parameterType="String" resultType="java.util.HashMap">
		SELECT
		ob.order_number AS orderNumber
		FROM
		order_base_info ob
		WHERE
		ob.id=#{id}
	</select>
	<!-- 场地票=====>>删除场地锁定状态 -->
	<delete id="deleteLockField" parameterType="java.util.Map" >
		DELETE
		FROM
		site_time_interval_status
		WHERE
		field_id = #{fieldId}
		<![CDATA[AND order_date >= #{startDate}
		AND order_date <= #{endDate}]]>
		AND time_interval_id = #{timeIntervalId}
		AND `status` = #{status}
	</delete>
</mapper>